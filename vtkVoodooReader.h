// .NAME vtkVoodooReader - read a text file generated by Voodoo
// .SECTION Description

#ifndef __vtkVoodooReader_h
#define __vtkVoodooReader_h

#include "vtkCalibratedImageCollectionReader.h" //superclass
#include "vtkSmartPointer.h"

class vtkVoodooReader : public vtkCalibratedImageCollectionReader
{
public:
  vtkTypeMacro(vtkVoodooReader,vtkCalibratedImageCollectionReader);
  void PrintSelf(ostream& os, vtkIndent indent);

  static vtkVoodooReader *New();

  // Description:
  // Specify file name of the voodoo (txt) file.
  void SetFileName(vtkstd::string filename);
  std::string GetFileName();

  // Description:
  // Specify the image directory
  void SetImageDirectory(vtkstd::string filename);
  std::string GetImageDirectory();

  // Get the points
  vtkSmartPointer<vtkPolyData> GetPoints();

  // Get the cameras
  vtkSmartPointer<vtkCalibratedImageCollection> GetCameras();

  // Set the file extension of the images (including the '.') (default is ".png")
  void SetImageFileExtension(std::string);

protected:
  vtkVoodooReader();
  ~vtkVoodooReader(){};

  int RequestData(vtkInformation *, vtkInformationVector **, vtkInformationVector *);

private:
  vtkVoodooReader(const vtkVoodooReader&);  // Not implemented.
  void operator=(const vtkVoodooReader&);  // Not implemented.

  std::string FileName;
  std::string ImageDirectory;

  vtkSmartPointer<vtkPolyData> Points;
  vtkSmartPointer<vtkCalibratedImageCollection> Cameras;

  std::string ImageFileExtension;
};

#endif
